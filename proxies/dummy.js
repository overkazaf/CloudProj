{
    _readableState: {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
    },
    readable: true,
    domain: null,
    _events: {},
    _maxListeners: undefined,
    socket: {
        _connecting: false,
        _hadError: false,
        _handle: {
            fd: 18,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
            writeQueueSize: 0
        },
        _parent: null,
        _host: null,
        _readableState: {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: false,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null,
            resumeScheduled: false
        },
        readable: true,
        domain: null,
        _events: {
            end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
            data: [Function: socketOnData]
        },
        _maxListeners: undefined,
        _writableState: {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false
        },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 405,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: {
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _connections: 2,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:null:9999'
        },
        _idleTimeout: 120000,
        _idleNext: {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 0,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 36429899,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true
        },
        _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
        _idleStart: 36430118,
        parser: {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            _headers: [],
            _url: '',
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming]
        },
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: {
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _hasBody: true,
            _trailer: '',
            finished: false,
            _hangupClose: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: null,
            _headerNames: {}
        }
    },
    connection: {
        _connecting: false,
        _hadError: false,
        _handle: {
            fd: 18,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
            writeQueueSize: 0
        },
        _parent: null,
        _host: null,
        _readableState: {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: false,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null,
            resumeScheduled: false
        },
        readable: true,
        domain: null,
        _events: {
            end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
            data: [Function: socketOnData]
        },
        _maxListeners: undefined,
        _writableState: {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false
        },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 405,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: {
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _connections: 2,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:null:9999'
        },
        _idleTimeout: 120000,
        _idleNext: {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 0,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 36429899,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true
        },
        _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
        _idleStart: 36430118,
        parser: {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            _headers: [],
            _url: '',
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming]
        },
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: {
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _hasBody: true,
            _trailer: '',
            finished: false,
            _hangupClose: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: null,
            _headerNames: {}
        }
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: false,
    headers: {
        host: 'localhost:9999',
        connection: 'keep-alive',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36',
        'accept-encoding': 'gzip, deflate, sdch',
        'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4'
    },
    rawHeaders: ['Host',
        'localhost:9999',
        'Connection',
        'keep-alive',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Upgrade-Insecure-Requests',
        '1',
        'User-Agent',
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36',
        'Accept-Encoding',
        'gzip, deflate, sdch',
        'Accept-Language',
        'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4'
    ],
    trailers: {},
    rawTrailers: [],
    _pendings: [],
    _pendingIndex: 0,
    upgrade: false,
    url: '/',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: {
        _connecting: false,
        _hadError: false,
        _handle: {
            fd: 18,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
            writeQueueSize: 0
        },
        _parent: null,
        _host: null,
        _readableState: {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: false,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null,
            resumeScheduled: false
        },
        readable: true,
        domain: null,
        _events: {
            end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
            data: [Function: socketOnData]
        },
        _maxListeners: undefined,
        _writableState: {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false
        },
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 405,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: {
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _connections: 2,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _connectionKey: '4:null:9999'
        },
        _idleTimeout: 120000,
        _idleNext: {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 0,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 36429899,
            parser: [Object],
            _paused: false,
            read: [Function],
            _consuming: true
        },
        _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
        _idleStart: 36430118,
        parser: {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            _headers: [],
            _url: '',
            socket: [Circular],
            incoming: [Circular],
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming]
        },
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: {
            domain: null,
            _events: [Object],
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _hasBody: true,
            _trailer: '',
            finished: false,
            _hangupClose: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: null,
            _headerNames: {}
        }
    },
    _consuming: false,
    _dumped: false
}
